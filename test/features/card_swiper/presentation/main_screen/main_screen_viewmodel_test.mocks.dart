// Mocks generated by Mockito 5.4.6 from annotations
// in cat_tinder/test/features/card_swiper/presentation/main_screen/main_screen_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:cat_tinder/core/services/connectivity_service.dart' as _i8;
import 'package:cat_tinder/core/services/stats_service.dart' as _i9;
import 'package:cat_tinder/features/cat_swiper/domain/entities/cat_entity.dart'
    as _i4;
import 'package:cat_tinder/features/cat_swiper/domain/repositories/cat_api_repository.dart'
    as _i2;
import 'package:cat_tinder/features/cat_swiper/domain/usecases/cat_api/get_cat_from_api.dart'
    as _i3;
import 'package:cat_tinder/features/cat_swiper/domain/usecases/cat_api/init_cats_from_api.dart'
    as _i7;
import 'package:cat_tinder/features/cat_swiper/domain/usecases/cat_api/update_cat_from_api.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCatApiRepository_0 extends _i1.SmartFake
    implements _i2.CatApiRepository {
  _FakeCatApiRepository_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GetCatFromApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCatFromApi extends _i1.Mock implements _i3.GetCatFromApi {
  MockGetCatFromApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CatApiRepository get catRepository =>
      (super.noSuchMethod(
            Invocation.getter(#catRepository),
            returnValue: _FakeCatApiRepository_0(
              this,
              Invocation.getter(#catRepository),
            ),
          )
          as _i2.CatApiRepository);

  @override
  _i4.CatEntity? call(int? ind) =>
      (super.noSuchMethod(Invocation.method(#call, [ind])) as _i4.CatEntity?);
}

/// A class which mocks [UpdateCatFromApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateCatFromApi extends _i1.Mock implements _i5.UpdateCatFromApi {
  MockUpdateCatFromApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CatApiRepository get catRepository =>
      (super.noSuchMethod(
            Invocation.getter(#catRepository),
            returnValue: _FakeCatApiRepository_0(
              this,
              Invocation.getter(#catRepository),
            ),
          )
          as _i2.CatApiRepository);

  @override
  _i6.Future<void> call(int? ind) =>
      (super.noSuchMethod(
            Invocation.method(#call, [ind]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [InitCatsFromApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockInitCatsFromApi extends _i1.Mock implements _i7.InitCatsFromApi {
  MockInitCatsFromApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CatApiRepository get catRepository =>
      (super.noSuchMethod(
            Invocation.getter(#catRepository),
            returnValue: _FakeCatApiRepository_0(
              this,
              Invocation.getter(#catRepository),
            ),
          )
          as _i2.CatApiRepository);

  @override
  _i6.Future<void> call() =>
      (super.noSuchMethod(
            Invocation.method(#call, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [ConnectivityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityService extends _i1.Mock
    implements _i8.ConnectivityService {
  MockConnectivityService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<bool> get connectionStatus =>
      (super.noSuchMethod(
            Invocation.getter(#connectionStatus),
            returnValue: _i6.Stream<bool>.empty(),
          )
          as _i6.Stream<bool>);

  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [StatsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStatsService extends _i1.Mock implements _i9.StatsService {
  MockStatsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> saveStats({required int? likes, required int? dislikes}) =>
      (super.noSuchMethod(
            Invocation.method(#saveStats, [], {
              #likes: likes,
              #dislikes: dislikes,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<Map<String, int>> loadStats() =>
      (super.noSuchMethod(
            Invocation.method(#loadStats, []),
            returnValue: _i6.Future<Map<String, int>>.value(<String, int>{}),
          )
          as _i6.Future<Map<String, int>>);
}
